package stack_queue.programmers.performance;

import java.util.LinkedList;
import java.util.Queue;

public class Performance {
	
	class Develop{
		int progresses;
		int speeds;
		
		public Develop(int progresses, int speeds) {
			this.progresses = progresses;
			this.speeds = speeds;
		}
		
		public void commit() {
			progresses += speeds;
		}
	}
	
	
	public static void main(String[] args) {
		
		Performance performance = new Performance();
		performance.solution(new int[]{93,30,55},new int[] {1,30,5});
	}
	

	 public int[] solution(int[] progresses, int[] speeds) {
	        int[] answer = {};
	        
	        Queue<Develop> queue = new LinkedList<>();
	        
	        //Queue Setting
	        for (int i = 0 ; i <  progresses.length ; i++) {
	        	queue.offer(new Develop(progresses[i], speeds[i]));
	        }
	        
	        while(!queue.isEmpty()) {
	        	Queue q = (Queue) queue.poll();
	        	
	        	
	        }
	        
	        return answer;
	    }
}
