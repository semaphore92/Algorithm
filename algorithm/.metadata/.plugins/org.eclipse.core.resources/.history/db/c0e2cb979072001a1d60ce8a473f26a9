package stack_queue.programmers.performance;

import java.util.LinkedList;
import java.util.Queue;

public class Performance {
	
	class Develop{
		int progresses;
		int speeds;
		int idx;
		
		public Develop(int progresses, int speeds, int idx) {
			this.progresses = progresses;
			this.speeds = speeds;
			this.idx = idx;
		}
		
		public void commit() {
			progresses += speeds;
		}

		public int getProgresses() {
			return progresses;
		}

		public int getSpeeds() {
			return speeds;
		}

		public int getIdx() {
			return idx;
		}
		
	}
	
	
	public static void main(String[] args) {
		
		Performance performance = new Performance();
		performance.solution(new int[]{93,30,55},new int[] {1,30,5});
	}
	

	 public int[] solution(int[] progresses, int[] speeds) {
	        int[] answer = new int[progresses.length];
	        
	        Queue<Develop> queue = new LinkedList<>();
	        Queue<Develop> queue2 = new LinkedList<>();
	        int cnt = 0;
	        
	        //Queue Setting
	        for (int i = 0 ; i <  progresses.length ; i++) {
	        	queue.offer(new Develop(progresses[i], speeds[i], i));
	        }
	        
	        while(!queue.isEmpty()) {
        	 	Develop develop = queue.poll();
        		//개발 진행
        		develop.commit();
        		System.out.println(develop.getIdx()+"건");
        		System.out.println("진행률 : " + develop.getProgresses());
        		System.out.println();
        		
        		int progress = develop.getProgresses();
        		
        		//개발 완료된 건 보관
        		if(progress >= 100 ) {
        			queue2.offer(develop);
        		}else {
        			queue.offer(develop);
        		}
        		
        		//100% 개발 건 내보내기
        		for(Develop t2: queue2) {
        			int index    = t2.getIdx();
        			if(index == cnt & !queue2.isEmpty()) {
        				answer[cnt] = queue2.size();
        				queue2.clear();
        				
        				Develop develop_near = queue.peek();
        				cnt = develop_near.getIdx();
        			}
        			
	        	}
	        	
	        }
	        
	        for(int i = 0 ; i< answer.length ; i++) {
	        	System.out.println(i + "번째 완료 건들" + answer[i]);
	        }
	        
	        return answer;
	    }
}
